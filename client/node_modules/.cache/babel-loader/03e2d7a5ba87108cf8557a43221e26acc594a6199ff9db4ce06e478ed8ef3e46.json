{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users: []\n  },\n  reducers: {\n    getUser: (state, action) => {\n      state.users = action.payload.map(user => {\n        return {\n          id: user._id,\n          address1: user.address1,\n          address2: user.address2,\n          city: user.city,\n          country: user.country,\n          email: user.email,\n          firstname: user.firstname,\n          lastname: user.lastname,\n          phone: user.phone,\n          state: user.state,\n          zipcode: user.zipcode\n        };\n      });\n    },\n    addUser: (state, action) => {\n      // console.log(\"addUser Action Payload:\", action.payload);\n      state.users.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const index = state.users.findIndex(x => x.is === action.payload.id);\n      state.users[index] = [action.payload.address1, action.payload.address2, action.payload.city, action.payload.country, action.payload.email, action.payload.firstname, action.payload.lastname, action.payload.phone, action.payload.state, action.payload.zipcode];\n    },\n    deleteUser: (state, action) => {\n      const id = action.payload.id;\n      state.users = state.users.filter(u => u.id !== id);\n    }\n  }\n});\nexport const {\n  getUser,\n  addUser,\n  updateUser,\n  deleteUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","users","reducers","getUser","state","action","payload","map","user","id","_id","address1","address2","city","country","email","firstname","lastname","phone","zipcode","addUser","push","updateUser","index","findIndex","x","is","deleteUser","filter","u","actions","reducer"],"sources":["C:/Users/HP/Desktop/tamil-machineTest/client/src/redux/userSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    users: [],\r\n  },\r\n  reducers: {\r\n    getUser: (state, action) => {\r\n      state.users = action.payload.map((user) => {\r\n        return {\r\n          id: user._id,\r\n          address1: user.address1,\r\n          address2: user.address2,\r\n          city: user.city,\r\n          country: user.country,\r\n          email: user.email,\r\n          firstname: user.firstname,\r\n          lastname: user.lastname,\r\n          phone: user.phone,\r\n          state: user.state,\r\n          zipcode: user.zipcode,\r\n        };\r\n      });\r\n    },\r\n    addUser: (state, action) => {\r\n      // console.log(\"addUser Action Payload:\", action.payload);\r\n      state.users.push(action.payload);\r\n    },\r\n    updateUser: (state, action) => {\r\n      const index = state.users.findIndex((x) => x.is === action.payload.id);\r\n      state.users[index] = [\r\n        action.payload.address1,\r\n        action.payload.address2,\r\n        action.payload.city,\r\n        action.payload.country,\r\n        action.payload.email,\r\n        action.payload.firstname,\r\n        action.payload.lastname,\r\n        action.payload.phone,\r\n        action.payload.state,\r\n        action.payload.zipcode,\r\n      ];\r\n    },\r\n    deleteUser: (state, action) => {\r\n      const id = action.payload.id;\r\n      state.users = state.users.filter((u) => u.id !== id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getUser, addUser, updateUser, deleteUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO,CAACC,GAAG,CAAEC,IAAI,IAAK;QACzC,OAAO;UACLC,EAAE,EAAED,IAAI,CAACE,GAAG;UACZC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;UACvBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;UACvBC,IAAI,EAAEL,IAAI,CAACK,IAAI;UACfC,OAAO,EAAEN,IAAI,CAACM,OAAO;UACrBC,KAAK,EAAEP,IAAI,CAACO,KAAK;UACjBC,SAAS,EAAER,IAAI,CAACQ,SAAS;UACzBC,QAAQ,EAAET,IAAI,CAACS,QAAQ;UACvBC,KAAK,EAAEV,IAAI,CAACU,KAAK;UACjBd,KAAK,EAAEI,IAAI,CAACJ,KAAK;UACjBe,OAAO,EAAEX,IAAI,CAACW;QAChB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IACDC,OAAO,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC1B;MACAD,KAAK,CAACH,KAAK,CAACoB,IAAI,CAAChB,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC;IACDgB,UAAU,EAAEA,CAAClB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMkB,KAAK,GAAGnB,KAAK,CAACH,KAAK,CAACuB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKrB,MAAM,CAACC,OAAO,CAACG,EAAE,CAAC;MACtEL,KAAK,CAACH,KAAK,CAACsB,KAAK,CAAC,GAAG,CACnBlB,MAAM,CAACC,OAAO,CAACK,QAAQ,EACvBN,MAAM,CAACC,OAAO,CAACM,QAAQ,EACvBP,MAAM,CAACC,OAAO,CAACO,IAAI,EACnBR,MAAM,CAACC,OAAO,CAACQ,OAAO,EACtBT,MAAM,CAACC,OAAO,CAACS,KAAK,EACpBV,MAAM,CAACC,OAAO,CAACU,SAAS,EACxBX,MAAM,CAACC,OAAO,CAACW,QAAQ,EACvBZ,MAAM,CAACC,OAAO,CAACY,KAAK,EACpBb,MAAM,CAACC,OAAO,CAACF,KAAK,EACpBC,MAAM,CAACC,OAAO,CAACa,OAAO,CACvB;IACH,CAAC;IACDQ,UAAU,EAAEA,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMI,EAAE,GAAGJ,MAAM,CAACC,OAAO,CAACG,EAAE;MAC5BL,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAAC2B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACpB,EAAE,KAAKA,EAAE,CAAC;IACtD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,OAAO;EAAEiB,OAAO;EAAEE,UAAU;EAAEK;AAAW,CAAC,GAAG7B,SAAS,CAACgC,OAAO;AAC7E,eAAehC,SAAS,CAACiC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}